Starting audit...
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ObjectCloner.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ObjectCloner.java:8:1: Class ObjectCloner should be declared as final. [FinalClass]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ObjectCloner.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ObjectCloner.java:12:12: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ObjectCloner.java:12:35: Parameter oldObj should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ObjectCloner.java:24:11: 'catch' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:9:21: Variable 'children' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:11:9: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:24:33: Parameter children should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:30:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:31:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:46:5: Class 'AnnualChildren' looks like designed for extension (can be subclassed), but the method 'getAnnualChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChildren' final or making the method 'getAnnualChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:50:5: Class 'AnnualChildren' looks like designed for extension (can be subclassed), but the method 'addChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChildren' final or making the method 'addChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:54:5: Class 'AnnualChildren' looks like designed for extension (can be subclassed), but the method 'addChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChildren' final or making the method 'addChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:58:5: Class 'AnnualChildren' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChildren' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:60:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChildren.java:61:69: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:3:8: Unused import - com.google.gson.annotations.Expose. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:25:18: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:25:33: Name 'BabyMaxAge' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:26:18: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:26:33: Name 'KidMaxAge' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:27:18: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:27:33: Name 'TeenMaxAge' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:50:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:54:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:59:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:63:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:68:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:72:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:77:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:81:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:86:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:90:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:95:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:99:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:104:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:108:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:112:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:116:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:120:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'isAdult' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'isAdult' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:121:27: '18' is a magic number. [MagicNumber]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:125:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:129:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:133:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'addNiceScoreToHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'addNiceScoreToHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:133:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:133:52: 'niceScore' hides a field. [HiddenField]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:141:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:145:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:150:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:154:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:158:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'addReceivedGift' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'addReceivedGift' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:158:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:165:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'resetReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'resetReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:165:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:170:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getTotalCostOfGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getTotalCostOfGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:170:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:178:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:180:25: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:181:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:182:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:183:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:184:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:185:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:186:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:187:75: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:188:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:189:58: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:190:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:191:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:195:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Child.java:196:26: Parameter other should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:5:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:13:25: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:14:25: Parameter newGifts should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:15:25: Parameter newChildren should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:16:25: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:24:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:28:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:28:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:33:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:37:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:37:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:42:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:46:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:46:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:51:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:55:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:55:36: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:60:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:61:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:62:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:63:59: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:64:65: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/AnnualChange.java:65:73: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:3:8: Unused import - com.google.gson.Gson. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:4:8: Unused import - com.google.gson.GsonBuilder. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:6:8: Unused import - enums.Cities. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:8:8: Unused import - java.io.Serializable. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:10:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:20:18: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:20:41: Parameter santaBudget should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:20:61: Parameter initialData should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:27:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:31:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:31:34: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:36:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:40:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:40:32: Parameter santaBudget should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:45:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:49:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:49:32: Parameter initialData should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:54:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getBudgetUnit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getBudgetUnit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:58:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setBudgetUnit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setBudgetUnit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:58:31: Parameter budgetUnit should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:62:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'createMapGiftCategoriesSortedByGiftsPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'createMapGiftCategoriesSortedByGiftsPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:66:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:68:25: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:69:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:70:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:71:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:75:53: Parameter array1 should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:75:65: Parameter array2 should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:77: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:80:45: Parameter array1 should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:80:57: Parameter array2 should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:82: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:103: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:115:33: Parameter annualChange should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:123: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:129:39: Parameter annualChange should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:151:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'startNenorocire' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'startNenorocire' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:151:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:156: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Input.java:160: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:12:17: Parameter productName should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:12:37: Parameter price should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:12:51: Parameter category should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:19:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:23:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:23:32: Parameter productName should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:28:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:32:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:32:26: Parameter price should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:37:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:41:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:41:29: Parameter category should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:45:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:47:24: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:48:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:49:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:50:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:54:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/Gift.java:55:26: Parameter other should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:5:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:26:45: 'children' hides a field. [HiddenField]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:37:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'addGiftsToEachCategoryInMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'addGiftsToEachCategoryInMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:37:56: 'Gift' is followed by whitespace. [NoWhitespaceAfter]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:37:59: 'santaGiftsList' hides a field. [HiddenField]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:43:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'initGiftCategoriesSortedByGiftsPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'initGiftCategoriesSortedByGiftsPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:43:65: 'Gift' is followed by whitespace. [NoWhitespaceAfter]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:43:68: 'santaGiftsList' hides a field. [HiddenField]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:50:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:54:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:54:29: Parameter children should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:59:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:63:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:63:35: Parameter santaGiftsList should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:68:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getGiftCategoriesSortedByGiftsPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getGiftCategoriesSortedByGiftsPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:72: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:72:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setGiftCategoriesSortedByGiftsPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setGiftCategoriesSortedByGiftsPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:72:53: Parameter giftCategoriesSortedByGiftsPrice should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:76:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'removeChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'removeChild' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:76:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:76:29: Parameter child should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:80:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'removeAdultsFromChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'removeAdultsFromChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:85:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'averageScoreOfChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'averageScoreOfChild' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:85:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:85:39: Parameter child should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:94:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'weightedAverageScoreOfChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'weightedAverageScoreOfChild' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:94:47: Parameter child should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:101: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:101:13: Name 'sum_of_weights' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:105:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setAverageScoreForEachChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setAverageScoreForEachChild' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:105:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:108:39: '10.0' is a magic number. [MagicNumber]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:119:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'initChildrenNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'initChildrenNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:119:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:127:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'resetChildrenReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'resetChildrenReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:133:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'incrementChildrenAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'incrementChildrenAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:133:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:139:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:141:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:142:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/InitialData.java:143:71: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:12:24: Parameter id should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:12:36: Parameter niceScore should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:12:54: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:19:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:23:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:23:23: Parameter id should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:27:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:31:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:31:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:36:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:40:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:40:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:45:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:46:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:47:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:48:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/xmas/ChildUpdate.java:49:75: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/enums/Cities.java:60:26: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/enums/Cities.java:61:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/enums/Category.java:44:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/enums/Category.java:45:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:9:8: Unused import - enums.Category. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:11:8: Unused import - xmas.InitialData. [UnusedImports]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:14:15: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:34:25: Name 'RunTests' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:40:25: Name 'RunTest' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:40:33: Parameter testNumber should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:43:44: Parameter clazz should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:48:44: Parameter field should be final. [FinalParameters]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:52: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:61: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /Users/brinzandarius/Desktop/Proiect/./src/main/Main.java:72:33: '{' is not preceded with whitespace. [WhitespaceAround]
Audit done.
Checkstyle ends with 238 errors.
